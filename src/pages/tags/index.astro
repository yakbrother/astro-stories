---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import TagLink from '@components/TagLink.astro';

const stories = await getCollection('stories');
const tags = [...new Set(stories.flatMap(story => story.data.tags))].sort();

// Count stories per tag
const tagCounts = tags.reduce((acc, tag) => {
    acc[tag] = stories.filter(story => story.data.tags.includes(tag)).length;
    return acc;
}, {} as Record<string, number>);

const tagCount = tags.length;
---

<BaseLayout 
    title="Tags" 
    subtitle={`${tagCount} tags`}
    breadcrumbs={[
        { text: 'Tags' }
    ]}>
    <div class="tags-header">
        <h1>Tags</h1>
        <p>Browse stories by topic</p>
    </div>

    <section class="tags-grid">
        {tags.map(tag => (
            <div class="tag-item">
                <TagLink tag={tag} size="md" />
                <span class="count">{tagCounts[tag]} {tagCounts[tag] === 1 ? 'story' : 'stories'}</span>
            </div>
        ))}
    </section>
</BaseLayout>

<style>
    .tags-header {
        text-align: center;
        margin: 2rem 0 4rem;
    }
    .tags-header h1 {
        margin-bottom: 1rem;
    }
    .tags-header p {
        color: var(--gray-600);
    }
    .tags-grid {
        display: grid;
        gap: 1.5rem;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        margin-bottom: 4rem;
    }
    .tag-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    .count {
        color: var(--gray-600);
        font-size: 0.9rem;
    }
</style>
