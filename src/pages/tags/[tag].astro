---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import StoryCard from '@components/StoryCard.astro';
import Tag from '@components/Tag.astro';

export async function getStaticPaths() {
    const stories = await getCollection('stories');
    const tags = [...new Set(stories.flatMap(story => story.data.tags))];
    
    return tags.map(tag => ({
        params: { tag },
        props: { 
            stories: stories
                .filter(story => story.data.tags.includes(tag))
                .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
        }
    }));
}

const { tag } = Astro.params;
const { stories } = Astro.props;

// Get other tags that appear alongside this tag
const relatedTags = [...new Set(
    stories.flatMap(story => 
        story.data.tags.filter(t => t !== tag)
    )
)].sort();
---

<BaseLayout title={`Stories tagged "${tag}"`}>
    <div class="tag-header">
        <h1>
            <Tag tag={tag} size="md" />
            <span class="count">{stories.length} {stories.length === 1 ? 'story' : 'stories'}</span>
        </h1>

        {relatedTags.length > 0 && (
            <div class="related-tags">
                <p>Related tags:</p>
                <div class="tags">
                    {relatedTags.map(relatedTag => (
                        <Tag tag={relatedTag} size="sm" />
                    ))}
                </div>
            </div>
        )}
    </div>

    <section class="stories-grid">
        {stories.map(story => (
            <StoryCard story={story} />
        ))}
    </section>
</BaseLayout>

<style>
    .tag-header {
        margin: 2rem 0 4rem;
    }
    .tag-header h1 {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }
    .count {
        color: var(--gray-600);
        font-size: 1.1rem;
        font-weight: normal;
    }
    .related-tags {
        display: flex;
        align-items: center;
        gap: 1rem;
        color: var(--gray-600);
    }
    .related-tags p {
        margin: 0;
        font-size: 0.9rem;
    }
    .tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }
    .stories-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: repeat(auto-fill, minmax(min(100%, 24rem), 1fr));
        margin-bottom: 4rem;
    }
</style>
