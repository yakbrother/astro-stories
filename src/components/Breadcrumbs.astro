---
interface Props {
    segments: Array<{
        text: string;
        href?: string;
    }>;
}

const { segments } = Astro.props;
const truncate = (input: string) => input.length > 35 ? `${input.substring(0, 5)}...` : input;
---

{segments && segments.length > 0 && (
<nav aria-label="Breadcrumb" class="breadcrumbs">
    <ol>
        <li>
            <a href="/">Home</a>
        </li>
        {segments.map((segment, index) => (
            <li>
                {segment.href ? (
                    <a href={segment.href}>{segment.text}</a>
                ) : (
                    <span aria-current="page">
                        {truncate(segment.text)}
                    </span>
                )}
            </li>
        ))}
    </ol>
</nav>
)}

<style>
    .breadcrumbs {
        background: var(--color-background-muted);
        padding-bottom: var(--s-0);
        padding-top: var(--s-0);
        padding-right: var(--s-1);
        padding-left: var(--s-1);
        font-size: var(--s--1);
        border-radius: 1em;
        text-transform: lowercase;
        margin: auto;
        margin-bottom: var(--s1);
        word-wrap: nowrap;
        width: 100%;
        max-width: var(--max-width);
    }
    
    .breadcrumbs ol {
        list-style: none;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .breadcrumbs li {
        display: flex;
        align-items: center;
    }

    .breadcrumbs li:not(:last-child)::after {
        content: "/";
        margin-left: 0.5rem;
        color: var(--color-text-muted);
    }

    .breadcrumbs a {
        color: var(--color-text-muted);
        text-decoration: none;
    }

    .breadcrumbs a:hover {
        color: var(--color-accent);
        text-decoration: underline;
    }

    .breadcrumbs [aria-current="page"] {
        color: var(--color-text);
        font-weight: 500;
    }
</style>